#!/bin/bash

# Script de inicio para producci√≥n en Railway
# Asegura que las migraciones se ejecuten antes de iniciar el servidor

set -e  # Salir si hay alg√∫n error

echo "üöÄ Iniciando aplicaci√≥n L√≥pez y Escobar Abogados..."

# Verificar que DATABASE_URL est√© configurada
if [ -z "$DATABASE_URL" ]; then
    echo "‚ùå ERROR: DATABASE_URL no est√° configurada"
    exit 1
fi

echo "üîó DATABASE_URL configurada correctamente"

# Verificar que el directorio standalone existe
if [ ! -f ".next/standalone/server.js" ]; then
    echo "‚ùå ERROR: No se encontr√≥ el archivo .next/standalone/server.js"
    echo "‚ÑπÔ∏è  Aseg√∫rate de que el build se complet√≥ correctamente"
    exit 1
fi

echo "‚úÖ Archivo standalone encontrado"

# Ejecutar migraciones con reintentos
echo "üóÑÔ∏è Ejecutando migraciones de base de datos..."
MAX_RETRIES=3
RETRY_COUNT=0

while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
    if npx prisma migrate deploy; then
        echo "‚úÖ Migraciones aplicadas exitosamente"
        break
    else
        RETRY_COUNT=$((RETRY_COUNT + 1))
        echo "‚ö†Ô∏è  Intento de migraci√≥n ${RETRY_COUNT}/${MAX_RETRIES} fall√≥"
        
        if [ $RETRY_COUNT -eq $MAX_RETRIES ]; then
            echo "‚ùå ERROR: No se pudieron aplicar las migraciones despu√©s de ${MAX_RETRIES} intentos"
            exit 1
        fi
        
        echo "ÔøΩ Reintentando en 5 segundos..."
        sleep 5
    fi
done

# Generar cliente Prisma (por si acaso)
echo "üì¶ Verificando cliente Prisma..."
npx prisma generate

echo "üî• Iniciando servidor Next.js en modo standalone..."
echo "üåê Servidor disponible en puerto ${PORT:-3000}"

# Iniciar el servidor
exec node .next/standalone/server.js
